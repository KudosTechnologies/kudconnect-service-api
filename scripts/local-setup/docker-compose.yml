version: '3.8'
services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: kudconnect
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    command: ['start-dev']
    volumes:
      - ./realm-config:/opt/keycloak/data/import
    environment:
      - KC_DB=dev-file
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_FEATURES=scripts
      - KC_HTTP_PORT=9080
      - KC_HTTPS_PORT=9443
    ports:
      - "9080:9080"
      - "9443:9443"

  kudconnect-service:
    build:
      context: ../../
      dockerfile: Dockerfile
    image: kudconnect-service
    depends_on:
      db:
        condition: service_started
      keycloak:
        condition: service_started
    environment:
      JAVA_OPTS: '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005'
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/kudconnect
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_BASE_URL: http://keycloak:9080
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI: http://keycloak:9080/realms/kudconnect
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: http://keycloak:9080/realms/kudconnect/protocol/openid-connect/certs
    ports:
      - "8080:8080"
      - "5005:5005"

  kudconnect-web-client:
    build:
      context: ../../kudconnect-web-client
      dockerfile: Dockerfile
    image: kudconnect-web-client
    depends_on:
      keycloak:
        condition: service_started
      kudconnect-service:
        condition: service_started
    environment:
      KEYCLOAK_BASE_URL: http://keycloak:9080
      API_BASE_URL: http://kudconnect-service:8080
    ports:
      - "80:80"

volumes:
  postgres_data: